/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package biblioteca.vistas;

import biblioteca.accesoADatos.EjemplarData;
import biblioteca.accesoADatos.PrestamoData;
import biblioteca.entidades.Ejemplar;
import biblioteca.entidades.EstadoEjemplar;
import static biblioteca.vistas.biblioteca.Escritorio;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author agus_
 */
public class ActualizarEjemplar extends javax.swing.JInternalFrame {
    private EjemplarData ejData= new EjemplarData();
    private PrestamoData prData=new PrestamoData();
    private ArrayList<Ejemplar> listaEjemplares = new ArrayList<>();
    /**
     * Creates new form ActualizarEjemplar
     */
    public ActualizarEjemplar() {
        initComponents();
        //cargarComboBoxEstado();
        //cargarComboBoxEjemplares();
        
        cargarComboBoxEjemplarVacio();
        cargarComboBoxEstadoVacio();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jcbEstado = new javax.swing.JComboBox<>();
        jbActualiz = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jcbEjemplar = new javax.swing.JComboBox<>();
        jbRetrasos = new javax.swing.JButton();

        setClosable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(700, 300));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ACTUALIZAR EJEMPLAR");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Seleccione ejemplar");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Seleccione estado ");

        jcbEstado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbEstadoMouseClicked(evt);
            }
        });

        jbActualiz.setText("Actualizar");
        jbActualiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizActionPerformed(evt);
            }
        });

        jbLimpiar.setText("Limpiar");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jcbEjemplar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbEjemplarMouseClicked(evt);
            }
        });

        jbRetrasos.setText("Listar Retrasos");
        jbRetrasos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRetrasosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbActualiz, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jbRetrasos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbLimpiar))
                    .addComponent(jcbEjemplar, javax.swing.GroupLayout.Alignment.TRAILING, 0, 350, Short.MAX_VALUE)
                    .addComponent(jcbEstado, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(111, 111, 111))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbEjemplar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbActualiz)
                    .addComponent(jbLimpiar)
                    .addComponent(jbRetrasos))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbEstadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbEstadoMouseClicked
        // TODO add your handling code here:
        cargarComboBoxEstado();
        
    }//GEN-LAST:event_jcbEstadoMouseClicked

    private void jbActualizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizActionPerformed
        // TODO add your handling code here:

        try {
            Ejemplar ejCod = (Ejemplar) jcbEjemplar.getModel().getSelectedItem(); //ejemplar del q se extrae el estado actual

            int codigo = ejCod.getCodigo();

            EstadoEjemplar estadoEj = (EstadoEjemplar) jcbEstado.getModel().getSelectedItem(); //estado al q se kiere actualizar
            
            if (ejCod.getEstado() == EstadoEjemplar.PRESTADO || ejCod.getEstado() == EstadoEjemplar.RETRASO) {
                JOptionPane.showMessageDialog(null, "No se puede actualizar, ejemplar no devuelto.");
                
            } else {
                if ((ejCod.getEstado() == EstadoEjemplar.DISPONIBLE)
                        && (estadoEj == EstadoEjemplar.REPARACION || estadoEj == EstadoEjemplar.NO_DISPONIBLE)) {
                    actualizarEstadoEjemplar(codigo, estadoEj);
                } else if ((ejCod.getEstado() == EstadoEjemplar.REPARACION)
                        && (estadoEj == EstadoEjemplar.DISPONIBLE || estadoEj == EstadoEjemplar.NO_DISPONIBLE)) {
                    actualizarEstadoEjemplar(codigo, estadoEj);
                } else if ((ejCod.getEstado() == EstadoEjemplar.NO_DISPONIBLE)
                        && (estadoEj == EstadoEjemplar.DISPONIBLE || estadoEj == EstadoEjemplar.REPARACION)) {
                    actualizarEstadoEjemplar(codigo, estadoEj);
                } else {
                    JOptionPane.showMessageDialog(null, "Ejemplar no prestado");//ejemplar no prestado
                }
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Seleccione un item. " + e.getMessage());
        }

    }//GEN-LAST:event_jbActualizActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        // TODO add your handling code here:
        cargarComboBoxEjemplarVacio();
        cargarComboBoxEstadoVacio();
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jcbEjemplarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbEjemplarMouseClicked
        // TODO add your handling code here:
        cargarComboBoxEjemplares();
    }//GEN-LAST:event_jcbEjemplarMouseClicked

    private void jbRetrasosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRetrasosActionPerformed
        
        PrestamosAtrasados pa = new PrestamosAtrasados();
        pa.setVisible(true);
        Escritorio.add(pa);
        Escritorio.moveToFront(pa);
    }//GEN-LAST:event_jbRetrasosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jbActualiz;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbRetrasos;
    private javax.swing.JComboBox<Ejemplar> jcbEjemplar;
    private javax.swing.JComboBox<EstadoEjemplar> jcbEstado;
    // End of variables declaration//GEN-END:variables
    private void cargarComboBoxEstadoVacio() {
        jcbEstado.setModel(new DefaultComboBoxModel<>());
    }
    
    private void cargarComboBoxEstado(){
        jcbEstado.setModel(new DefaultComboBoxModel<>(EstadoEjemplar.values()));
    }

    private void cargarComboBoxEjemplarVacio() {
        jcbEjemplar.setModel(new DefaultComboBoxModel<>());
    }

    private void cargarComboBoxEjemplares() {
        jcbEjemplar.removeAllItems();

        listaEjemplares = ejData.listarEjemplares();

        for (int i = 0; i < listaEjemplares.size(); i++) {

            jcbEjemplar.addItem(listaEjemplares.get(i));
        }
    }
    
    private void actualizarEstadoEjemplar(int codigo, EstadoEjemplar estado) {
        Ejemplar ejActualiz = new Ejemplar();
        ejActualiz.setCodigo(codigo);
        ejActualiz.setEstado(estado);

        boolean hayEjemplar = prData.verifEjemplar(ejActualiz);

        if (hayEjemplar) {
            ejData.actualizarEjemplar(ejActualiz);
        } else {
            JOptionPane.showMessageDialog(null, "No existe ejemplar.");
        }
    }
}

