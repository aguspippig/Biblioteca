/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
    private DefaultTableModel jtEjemplares = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };
 */
package biblioteca.vistas;

import biblioteca.accesoADatos.EjemplarData;
import biblioteca.accesoADatos.LibroData;
import biblioteca.entidades.Ejemplar;
import biblioteca.entidades.EstadoEjemplar;
import biblioteca.entidades.Libro;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author agus_
 */
public class BuscarEjemplar extends javax.swing.JInternalFrame {
    
    private EjemplarData ejData= new EjemplarData();
    private LibroData libroData= new LibroData();
    private ArrayList<Ejemplar> listaEjemplares = new ArrayList<>();
    
    private DefaultTableModel jtEjemplarModelo = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };
    /**
     * Creates new form GestionEjemplares
     */
    public BuscarEjemplar() {
        initComponents();
       
        armarCabecera();
        //cargarComboBoxEstado();
       cargarComboBoxVacio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtCodigo = new javax.swing.JTextField();
        jtIsbn = new javax.swing.JTextField();
        jtTitulo = new javax.swing.JTextField();
        jtAutor = new javax.swing.JTextField();
        jbBuscarCodigo = new javax.swing.JButton();
        jbBuscarIsbn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtEj = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jcbEstado2 = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setClosable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(700, 500));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BUSCAR EJEMPLAR");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Codigo");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("ISBN");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Titulo");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Autor");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Estado");

        jbBuscarCodigo.setText("Buscar");
        jbBuscarCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarCodigoActionPerformed(evt);
            }
        });

        jbBuscarIsbn.setText("Buscar");
        jbBuscarIsbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarIsbnActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jtEj.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtEj);

        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Buscar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Buscar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jbLimpiar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jbLimpiar.setText("Limpiar");
        jbLimpiar.setPreferredSize(new java.awt.Dimension(58, 35));
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jcbEstado2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbEstado2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbBuscarIsbn, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                        .addGap(64, 64, 64)
                        .addComponent(jbBuscarCodigo)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(jtIsbn)
                    .addComponent(jtCodigo)
                    .addComponent(jtAutor)
                    .addComponent(jcbEstado2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbBuscarCodigo))
                        .addGap(24, 24, 24)
                        .addComponent(jLabel3)
                        .addGap(7, 7, 7))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbBuscarIsbn)
                        .addComponent(jbLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jButton4)
                            .addComponent(jtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jButton5)
                            .addComponent(jtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(44, 44, 44)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jcbEstado2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarCodigoActionPerformed
        // BUSCAR EJEMPLAR POR CODIGO

        try {
        borrarFilas();
        
        String strCod=jtCodigo.getText();
        
        if(strCod.isEmpty()){
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un código válido");
            return;
        }
        
        int cod = Integer.valueOf(strCod);
        
        
        listaEjemplares=ejData.listarEjemplares();
        
         boolean hayEjemplar = false;
         
        for (Ejemplar lEj: listaEjemplares) {
            
            int ejCod=lEj.getCodigo();
            
            if(ejCod==cod){
                jtEjemplarModelo.addRow(new Object[]{
                lEj.getCodigo(),
                lEj.getLibro().getIsbn(),
                lEj.getLibro().getTitulo(),
                lEj.getLibro().getAutor(),
                lEj.getEstado(),
            });  
            hayEjemplar=true;
            }
        }//finForEach
        
        if(!hayEjemplar){
            JOptionPane.showMessageDialog(null, "No existe ejemplar con ese código.");
        }
        } catch (NumberFormatException e) {
             JOptionPane.showMessageDialog(null, "El valor ingresado no es un código válido.");
        }
        
        
    }//GEN-LAST:event_jbBuscarCodigoActionPerformed

    private void jbBuscarIsbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarIsbnActionPerformed
        // BUSCAR EJEMPLARES POR ISBN EjemplarData -> listarEjemplaresXLibro(Libro libro)

        try {

            borrarFilas();

            String strIsbn = jtIsbn.getText();

            if (strIsbn.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Por favor, ingrese un ISBN.");
                return;
            }

            int isbn = Integer.valueOf(strIsbn);

            Libro lib = libroData.buscarLibroXIsbn(isbn);

            listaEjemplares = ejData.listarEjemplaresXLibro(lib);

            boolean hayEjemplar = false;

            for (Ejemplar lEj : listaEjemplares) {
                jtEjemplarModelo.addRow(new Object[]{
                    lEj.getCodigo(),
                    lEj.getLibro().getIsbn(),
                    lEj.getLibro().getTitulo(),
                    lEj.getLibro().getAutor(),
                    lEj.getEstado(),});
                hayEjemplar = true;
            }//finForEach

            if (!hayEjemplar) {
                JOptionPane.showMessageDialog(null, "No existe ejemplar con ese ISBN.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El valor ingresado no es un ISBN válido.");
        }
    }//GEN-LAST:event_jbBuscarIsbnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // BUSCAR EJEMPLARES POR TITULO
        
        try {

            borrarFilas();

            String tit = jtTitulo.getText().toLowerCase();

            if (tit != null && !tit.isEmpty()) {

                listaEjemplares = ejData.listarEjemplares();

                boolean hayEjemplar = false;

                for (Ejemplar lEj : listaEjemplares) {

                    String ejTit = lEj.getLibro().getTitulo().toLowerCase();
                    if (ejTit.contains(tit)) {

                        jtEjemplarModelo.addRow(new Object[]{
                            lEj.getCodigo(),
                            lEj.getLibro().getIsbn(),
                            lEj.getLibro().getTitulo(),
                            lEj.getLibro().getAutor(),
                            lEj.getEstado(),});
                        hayEjemplar = true;
                    }
                }//finForEach
                
                if (!hayEjemplar) {
                    JOptionPane.showMessageDialog(null, "No existe ejemplar con ese título");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un título");
               
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Reingrese título");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // BUSCAR EJEMPLARES POR AUTOR
        try {

            borrarFilas();

            String autor1 = jtAutor.getText().toLowerCase();

            if (autor1 != null && !autor1.isEmpty()) {

                listaEjemplares = ejData.listarEjemplares();
                
                 boolean hayEjemplar = false;
                 
                for (Ejemplar lEj : listaEjemplares) {
                    String ejAutor = lEj.getLibro().getAutor().toLowerCase();
                    if (ejAutor.contains(autor1)) {

                        jtEjemplarModelo.addRow(new Object[]{
                            lEj.getCodigo(),
                            lEj.getLibro().getIsbn(),
                            lEj.getLibro().getTitulo(),
                            lEj.getLibro().getAutor(),
                            lEj.getEstado(),
                        });
                        hayEjemplar=true;
                    }
                }//finForEach
                
                if (!hayEjemplar) {
                    JOptionPane.showMessageDialog(null, "No existe ejemplar con ese autor");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Ingrese un autor");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Reingrese autor");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        // LIMPIA TODOS LOS CAMPOS
        jtCodigo.setText("");
        jtIsbn.setText("");
        jtTitulo.setText("");
        jtAutor.setText("");
        cargarComboBoxVacio();
        borrarFilas();
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // BUSCA EJEMPLARES POR ESTADO
        
        try {
            borrarFilas();

            String estado = jcbEstado2.getModel().getSelectedItem().toString().toLowerCase();

            listaEjemplares = ejData.listarEjemplares();

            boolean hayEjemplar = false;

            for (Ejemplar lEj : listaEjemplares) {
                String ejEstado = lEj.getEstado().toString();

                if (ejEstado.equalsIgnoreCase(estado)) {
                    jtEjemplarModelo.addRow(new Object[]{
                        lEj.getCodigo(),
                        lEj.getLibro().getIsbn(),
                        lEj.getLibro().getTitulo(),
                        lEj.getLibro().getAutor(),
                        lEj.getEstado(),});
                    hayEjemplar = true;
                }
            }//finForEach
            
            if (!hayEjemplar) {
                JOptionPane.showMessageDialog(null, "No existe ejemplar con ese estado");
            }
        } catch (NullPointerException e) {
             JOptionPane.showMessageDialog(null, "No se ha seleccionado un estado.");
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jcbEstado2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbEstado2MouseClicked
        // TODO add your handling code here:
        cargarComboBoxEstado();
    }//GEN-LAST:event_jcbEstado2MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbBuscarCodigo;
    private javax.swing.JButton jbBuscarIsbn;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JComboBox<EstadoEjemplar> jcbEstado2;
    private javax.swing.JTextField jtAutor;
    private javax.swing.JTextField jtCodigo;
    private javax.swing.JTable jtEj;
    private javax.swing.JTextField jtIsbn;
    private javax.swing.JTextField jtTitulo;
    // End of variables declaration//GEN-END:variables
    private void armarCabecera(){
        jtEjemplarModelo.addColumn("Código");
        jtEjemplarModelo.addColumn("ISBN");
        jtEjemplarModelo.addColumn("Título");
        jtEjemplarModelo.addColumn("Autor");
        jtEjemplarModelo.addColumn("Estado");
        
        jtEj.setModel(jtEjemplarModelo);
    }
    
    private void borrarFilas(){
        int f=jtEj.getRowCount() -1;
        
        for (; f >= 0; f--){
            jtEjemplarModelo.removeRow(f);
        }
    }
    
    private void cargarComboBoxVacio(){
        jcbEstado2.setModel(new DefaultComboBoxModel<>());
    }
    private void cargarComboBoxEstado(){
        jcbEstado2.setModel(new DefaultComboBoxModel<>(EstadoEjemplar.values()));
    }
    
    /*
  
    */
}
